/* tslint:disable */
/* eslint-disable */
/**
 * Horse Races
 * Horse Races api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';
import type { Horse } from './Horse';
import {
    HorseFromJSON,
    HorseFromJSONTyped,
    HorseToJSON,
    HorseToJSONTyped,
} from './Horse';

/**
 * 
 * @export
 * @interface Race
 */
export interface Race {
    /**
     * 
     * @type {number}
     * @memberof Race
     */
    id: number;
    /**
     * 
     * @type {Date}
     * @memberof Race
     */
    startTime: Date;
    /**
     * 
     * @type {User}
     * @memberof Race
     */
    scheduledBy: User;
    /**
     * 
     * @type {Array<Horse>}
     * @memberof Race
     */
    horses: Array<Horse>;
}

/**
 * Check if a given object implements the Race interface.
 */
export function instanceOfRace(value: object): value is Race {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('startTime' in value) || value['startTime'] === undefined) return false;
    if (!('scheduledBy' in value) || value['scheduledBy'] === undefined) return false;
    if (!('horses' in value) || value['horses'] === undefined) return false;
    return true;
}

export function RaceFromJSON(json: any): Race {
    return RaceFromJSONTyped(json, false);
}

export function RaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Race {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'startTime': (new Date(json['startTime'])),
        'scheduledBy': UserFromJSON(json['scheduledBy']),
        'horses': ((json['horses'] as Array<any>).map(HorseFromJSON)),
    };
}

  export function RaceToJSON(json: any): Race {
      return RaceToJSONTyped(json, false);
  }

  export function RaceToJSONTyped(value?: Race | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'startTime': ((value['startTime']).toISOString()),
        'scheduledBy': UserToJSON(value['scheduledBy']),
        'horses': ((value['horses'] as Array<any>).map(HorseToJSON)),
    };
}


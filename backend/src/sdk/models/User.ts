/* tslint:disable */
/* eslint-disable */
/**
 * Horse Races
 * Horse Races api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Horse } from './Horse';
import {
    HorseFromJSON,
    HorseFromJSONTyped,
    HorseToJSON,
    HorseToJSONTyped,
} from './Horse';
import type { Race } from './Race';
import {
    RaceFromJSON,
    RaceFromJSONTyped,
    RaceToJSON,
    RaceToJSONTyped,
} from './Race';

/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {number}
     * @memberof User
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    password: string;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    isAdmin: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    isSuspended: boolean;
    /**
     * 
     * @type {Date}
     * @memberof User
     */
    signupDate: Date;
    /**
     * 
     * @type {Array<Horse>}
     * @memberof User
     */
    horses: Array<Horse>;
    /**
     * 
     * @type {Array<Race>}
     * @memberof User
     */
    scheduledRaces: Array<Race>;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): value is User {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('password' in value) || value['password'] === undefined) return false;
    if (!('isAdmin' in value) || value['isAdmin'] === undefined) return false;
    if (!('isSuspended' in value) || value['isSuspended'] === undefined) return false;
    if (!('signupDate' in value) || value['signupDate'] === undefined) return false;
    if (!('horses' in value) || value['horses'] === undefined) return false;
    if (!('scheduledRaces' in value) || value['scheduledRaces'] === undefined) return false;
    return true;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'username': json['username'],
        'password': json['password'],
        'isAdmin': json['isAdmin'],
        'isSuspended': json['isSuspended'],
        'signupDate': (new Date(json['signupDate'])),
        'horses': ((json['horses'] as Array<any>).map(HorseFromJSON)),
        'scheduledRaces': ((json['scheduledRaces'] as Array<any>).map(RaceFromJSON)),
    };
}

  export function UserToJSON(json: any): User {
      return UserToJSONTyped(json, false);
  }

  export function UserToJSONTyped(value?: User | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'username': value['username'],
        'password': value['password'],
        'isAdmin': value['isAdmin'],
        'isSuspended': value['isSuspended'],
        'signupDate': ((value['signupDate']).toISOString()),
        'horses': ((value['horses'] as Array<any>).map(HorseToJSON)),
        'scheduledRaces': ((value['scheduledRaces'] as Array<any>).map(RaceToJSON)),
    };
}


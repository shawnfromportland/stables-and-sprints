// This file is auto-generated by @hey-api/openapi-ts

export type CreateHorseDto = {
    name: string;
    speedRating: number;
    color?: string;
    ownerId: number;
};

export type CreateRaceDto = {
    startTime: string;
    horseIds?: Array<(number)>;
};

export type CreateUserDto = {
    username: string;
    password: string;
    isAdmin: boolean;
};

export type Horse = {
    id: number;
    name: string;
    race_count: number;
    speedRating: number;
    color: string;
    retired: boolean;
    owner: User;
    currentRace: Race;
    races: Array<Race>;
};

export type Race = {
    id: number;
    startTime: string;
    scheduledBy: User;
    horses: Array<Horse>;
};

export type UpdateHorseDto = {
    [key: string]: unknown;
};

export type UpdateRaceDto = {
    [key: string]: unknown;
};

export type UpdateUserDto = {
    [key: string]: unknown;
};

export type User = {
    id: number;
    username: string;
    password: string;
    isAdmin: boolean;
    isSuspended: boolean;
    signupDate: string;
    horses: Array<Horse>;
    scheduledRaces: Array<Race>;
};

export type AppControllerGetHelloResponse = (string);

export type AppControllerGetHelloError = unknown;

export type UserControllerFindAllResponse = (Array<User>);

export type UserControllerFindAllError = unknown;

export type UserControllerCreateData = {
    body: CreateUserDto;
};

export type UserControllerCreateResponse = (User);

export type UserControllerCreateError = unknown;

export type UserControllerRemoveData = {
    path: {
        id: string;
    };
};

export type UserControllerRemoveResponse = (unknown);

export type UserControllerRemoveError = unknown;

export type UserControllerFindOneData = {
    path: {
        id: string;
    };
};

export type UserControllerFindOneResponse = (User);

export type UserControllerFindOneError = unknown;

export type UserControllerUpdateData = {
    body: UpdateUserDto;
    path: {
        id: string;
    };
};

export type UserControllerUpdateResponse = (User);

export type UserControllerUpdateError = unknown;

export type HorseControllerFindAllResponse = (Array<Horse>);

export type HorseControllerFindAllError = unknown;

export type HorseControllerCreateData = {
    body: CreateHorseDto;
};

export type HorseControllerCreateResponse = (Horse);

export type HorseControllerCreateError = unknown;

export type HorseControllerRemoveData = {
    path: {
        id: string;
    };
};

export type HorseControllerRemoveResponse = (unknown);

export type HorseControllerRemoveError = unknown;

export type HorseControllerFindOneData = {
    path: {
        id: string;
    };
};

export type HorseControllerFindOneResponse = (Horse);

export type HorseControllerFindOneError = unknown;

export type HorseControllerUpdateData = {
    body: UpdateHorseDto;
    path: {
        id: string;
    };
};

export type HorseControllerUpdateResponse = (Horse);

export type HorseControllerUpdateError = unknown;

export type HorseControllerEnterRaceData = {
    path: {
        horseId: number;
        raceId: number;
    };
};

export type HorseControllerEnterRaceResponse = (Race);

export type HorseControllerEnterRaceError = unknown;

export type RaceControllerFindAllResponse = (Array<Race>);

export type RaceControllerFindAllError = unknown;

export type RaceControllerCreateData = {
    body: CreateRaceDto;
};

export type RaceControllerCreateResponse = (Race);

export type RaceControllerCreateError = unknown;

export type RaceControllerRemoveData = {
    path: {
        id: string;
    };
};

export type RaceControllerRemoveResponse = (unknown);

export type RaceControllerRemoveError = unknown;

export type RaceControllerFindOneData = {
    path: {
        id: string;
    };
};

export type RaceControllerFindOneResponse = (Race);

export type RaceControllerFindOneError = unknown;

export type RaceControllerUpdateData = {
    body: UpdateRaceDto;
    path: {
        id: string;
    };
};

export type RaceControllerUpdateResponse = (Race);

export type RaceControllerUpdateError = unknown;

export type RaceControllerStartRaceData = {
    path: {
        id: number;
    };
};

export type RaceControllerStartRaceResponse = (unknown);

export type RaceControllerStartRaceError = unknown;
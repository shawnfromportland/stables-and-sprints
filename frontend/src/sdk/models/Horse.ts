/* tslint:disable */
/* eslint-disable */
/**
 * Horse Races
 * Horse Races api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';
import type { Race } from './Race';
import {
    RaceFromJSON,
    RaceFromJSONTyped,
    RaceToJSON,
    RaceToJSONTyped,
} from './Race';

/**
 * 
 * @export
 * @interface Horse
 */
export interface Horse {
    /**
     * 
     * @type {number}
     * @memberof Horse
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Horse
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof Horse
     */
    raceCount: number;
    /**
     * 
     * @type {number}
     * @memberof Horse
     */
    speedRating: number;
    /**
     * 
     * @type {string}
     * @memberof Horse
     */
    color: string;
    /**
     * 
     * @type {boolean}
     * @memberof Horse
     */
    retired: boolean;
    /**
     * 
     * @type {User}
     * @memberof Horse
     */
    owner: User;
    /**
     * 
     * @type {Race}
     * @memberof Horse
     */
    currentRace: Race;
    /**
     * 
     * @type {Array<Race>}
     * @memberof Horse
     */
    races: Array<Race>;
}

/**
 * Check if a given object implements the Horse interface.
 */
export function instanceOfHorse(value: object): value is Horse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('raceCount' in value) || value['raceCount'] === undefined) return false;
    if (!('speedRating' in value) || value['speedRating'] === undefined) return false;
    if (!('color' in value) || value['color'] === undefined) return false;
    if (!('retired' in value) || value['retired'] === undefined) return false;
    if (!('owner' in value) || value['owner'] === undefined) return false;
    if (!('currentRace' in value) || value['currentRace'] === undefined) return false;
    if (!('races' in value) || value['races'] === undefined) return false;
    return true;
}

export function HorseFromJSON(json: any): Horse {
    return HorseFromJSONTyped(json, false);
}

export function HorseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Horse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'raceCount': json['race_count'],
        'speedRating': json['speedRating'],
        'color': json['color'],
        'retired': json['retired'],
        'owner': UserFromJSON(json['owner']),
        'currentRace': RaceFromJSON(json['currentRace']),
        'races': ((json['races'] as Array<any>).map(RaceFromJSON)),
    };
}

  export function HorseToJSON(json: any): Horse {
      return HorseToJSONTyped(json, false);
  }

  export function HorseToJSONTyped(value?: Horse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'race_count': value['raceCount'],
        'speedRating': value['speedRating'],
        'color': value['color'],
        'retired': value['retired'],
        'owner': UserToJSON(value['owner']),
        'currentRace': RaceToJSON(value['currentRace']),
        'races': ((value['races'] as Array<any>).map(RaceToJSON)),
    };
}

